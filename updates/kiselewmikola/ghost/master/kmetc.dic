//<===AiQuestion===>
// this deals with little one-off questions that pop up in aitalk. you could set up a menu the same way and i'd probably use it. not sure how case/when works but i think it's useful for this?
OnAiQuestion {
	case reference0 {
	when "sleepwellyup" {"\0\п(№0№)А, ну в таком случае, поздравляю.\к"}; when "sleepwellnope" {"\0\п(№0№)Извините. Надеюсь сегодня лучше.\к"}; when "sleepwelldidnt" {"А. Так вот, мне просто было интересно.\к"}
	others {"эй, что-то пошло не так.\к"}
}}

//----Drag and Drop----

//When you drop a file on the ghost that isn't something it can install
//reference0 is the file path, which is split up amongst the local variables below
OnFileDrop2
{
	_filepath = SPLITPATH(reference0)
	_filename = _filepath[2]
	_fileext = TOLOWER(_filepath[3])
	case _fileext
	{
		when ".mid", ".wav", ".mp3", ".wma", ".au", ".ogg", ".flac"
		{"\0\s[0]Это музыка. Уже чистая.\e"}
		when ".dic"
		{
		"\0\п(№0№)Я это не могу зачистить. Говори с разработчиком, если у тебя такая большая проблема. Есть время для работы, а это не такая время. Удачи.\к"
		}
		others
		{
			if _fileext == "" //If it's a folder. Using \_? lets you display the slashes and such in dialogue, but you have to toggle it off after you no longer need it
			{"\0\s[0]Что ты на%(шли), \_?%(_filepath[1])\_??\nА есть в нём грязь? \n%*\__в(№OnCleanTime,папка№)Да\__в %*\__в(№cancel№)Нет\__в\e"}
			else //If it's a file
			{"\0\s[0]Это что, %(_filename)%(_fileext)?\ж4 Эх, грязно...\nНу? Будешь почистить? \n%*\__в(№OnCleanTime,файл№)Да\__в %*\__в(№cancel№)Нет\__в\e"}
		}
	}		
}

OnCleanTime {
	keromode = "грязный!!!"
	--
	case reference0 {when "папка" {"\1\s[12]\i[1]\e"}; when "файл" {"\1\s[11]\i[1]\e"}
	others {"Э? Что это? Ничего там...\е"}
}}


//----Network update---

//When the ghost finishes checking for updates
//reference0 is 'none' if there are no new files, and 'changed' if there are new files. reference1 is a list of the changed files, separated by commas
OnUpdateCheckComplete 
{
	if reference0 == "none" //If there are no new files
	{
		AutoUpdates[1] = 1 //Sets it so it won't check again until at least midnight
	}
	else
	{
		AutoUpdates[1] = 2 //This makes it so the ghost will tell the user there's a new update next time they open their menu
	}
}

//Starting to actually update
OnUpdateBegin
{
	"\0\s[0]Так, обновить буду.\w8\w8\e"
}

//reference0 is the number of new files, starting from 0
OnUpdateReady
{
	reference0++ //Number of files starts from 0, so this displays the correct amount
	_s = ""; _is = "is"; if reference0 != 1; _s = "s"; _is = "are" //plural checks, adds an s and changes is to are if there's more than 1 file
	_новые = "новый"; _файли = "файл"; if reference0 != 1; _новые = "новые"; _файли = "файли"
	
	"\0\s[0]Есть %(reference0) %(_новые) %(_файли).\w8\w8\e"
}

//When the update finishes. Don't forget to initialize any new variables you've created, more on that in Bootend.
//reference0 is 'none' if there were no new files to update with, reference1 is a list of new file names, separated by commas
OnUpdateComplete
{
	UpdateVars
	AutoUpdates[1] = 0
	if reference0 == "none"
	{"\0\s[0]Ничего нового.\e"}
	else
	{
		UpdateVars //Sets new variables upon a successful update. See the end of Bootend for an explanation on this.
		
		"\0\s[0]Все готово.\w6 Хочешь увидеть лог изменение?"
		--
		"\n\n\![*]\q[Да,OnChangeLog]\n\![*]\q[Нет,NoChangelog]\e"
	}
}

//I've put this here so it's easier to remember to update the version number while you're updating the changelog. This will display on the ghost's menu. I made it an envelope so you can have it be the same across multiple menus for multiple modes, if you want.
ghostver
{"1.0.0"}

//the autoscroll tag here means the user will see the changelog starting from the top. I recommend putting the new versions on top, and old versions under that.
OnChangeLog
{"\![open,file,kmchangelog.txt] Тадам.\e"}
Select.NoChangelog
{"\0\s[0]Можешь увидеть позже.\e"}

//Taken from the GT template because I see no reason to redo this and probably break it
//reference0 is the file currently being downloaded
OnUpdate.OnDownloadBegin
{
	"\0\s[0]\b2\_qЗагрузу %(reference0)...\n\n"
	--
	_Update_Progress = TOINT(reference1) + 1
	_Update_Total = TOINT(reference2) + 1
	Update_Remaining = _Update_Total - _Update_Progress

	//defining starting points
	_PointA = 1
	_PointB = 1

	//defining text buffers beforehand, otherwise they don't display right
	_txt = ""

	//loop calculates how many check boxes to display based on the variables above

	while _PointA <= _Update_Progress
	{
		_txt += ">"
		_PointA++
	}
	//see above except for blank boxes
	while _PointB <= Update_Remaining
	{
		_txt += "<"
		_PointB++
	}
	--
	//using the text buffers to display the correct number of boxes
	"%(_txt)\n\n%(_Update_Progress) с %(_Update_Total)"
	--
	"\_q\e"
} 

//_remaining should be the number of the file that's giving the error, in the order they're being downloaded. currentfile will be the file path.
OnUpdate.OnMD5CompareFailure
{
	_remaining = Update_Remaining + 1
	_currentfile = SPLITPATH(reference0)[2] + SPLITPATH(reference0)[3] //This gets the name and extension of the offending file
	"\0\s[0]Хеш значении MD5 не согласиться на файле %(_remaining) - '%(_currentfile)'.\w8\w8\e"
}

//reference0 is the reason the update failed
OnUpdateFailure //If the update fails
{
	if reference0 == "timeout" //If it timed out
	{"\0\s[0]Связь истекшим временем ожидания...\e"}
	elseif reference0 == "md5 miss" //If the update files have not been uploaded correctly and don't match the updates2.dau
	{
		_currentfile = SPLITPATH(reference1)[2] + SPLITPATH(reference1)[3] //This gets the name and extension of the offending file
		"\0\s[0]Хеш-значении MD5 не согласится друг друга.\w8\w8 Сообщить автором и расскажи ему, что файл '%(_currentfile)' даёт ошибок MD5.\e"
	}
	elseif reference0 == "artificial" //If the user cancels the update by double clicking the balloon
	{"\0\s[0]Э? Измени%(л) мнение?\e"}
	else //Any other errors
	{"\0\s[0]Ошибок был:\w4 '%(reference0)'.\e"}
}

//Similar to above, but for if the ghost was just checking and not actually updating
//reference0 is the reason the check failed
OnUpdateCheckFailure
{
	if AutoUpdates[1] == 1; "\e" //Stops the dialogue from showing if it's an auto check
	--
	if reference0 == "timeout" //If it timed out
	{"\0\s[0]Связь истекшим временем ожидания.\e"}
	else
	{"\0\s[0]Получил ошибку:\w4 '%(reference0)'.\e"}
}

OnKeyPress { 
	case reference0 {
		when "t" {OnAiTalk}
		when "r" {OnLastTalk}
		when "y" //Starts a commu dialogue with a random ghost
		{"\![raise,OnStartTalking]"}
		when "f1" {"\![open,readme]"}
		when "f2" {
			if debug == 1
			{OnTestVar}
		}
		when "c" {
			if debug == 1
			{OnCommuPingMenu}
		}
	}
}
