OnFirstBoot //Dialogue when you first open the ghost
{
	FirstBootVars //Initialize all your variables at the very bottom!
	
	if reference0 == 0 //Very first boot - this dialogue finishes over in nameteach.dic after the user gives their name, make sure you check there.
	{
		"\![enter,passivemode]\1\s[10]\0\s[0]Pryvitanne! My name is Tadora, and this here\1mao~\0 is my cat, Buterbrod! I teach people belarusian as my job, so... Hi again! How should I call you?"
	}
	else //Reference0 is the number of times you've uninstalled the ghost, so this is if you're reinstalling them.
	{
		"\![enter,passivemode]\1\s[10]\0\s[0]Pryvitanne znoŭ! It's been a while, hasn't it? ...I'm a bit embarrased to say, but I've forgotten your name. Kali laska, could you tell me again?"
	}
	--
	"\![open,inputbox,OnNameTeach]\e"
}

OnBoot //Normal booting
{
	BootVars //This sets variables you want to be set on a normal boot, like resetting the runtime. Again, make sure you set these up at the bottom.
	_timesince = FUNCTIONEX("time_check.dll","how_many_days",lastclosed[0],lastclosed[1],lastclosed[2],0,0,0)
	_timesince *= -1 //Multiply it by -1 to get rid of the negative sign, or to add one if the user traveled back in time.
	"\1\s[10]" //This line ensures the Kero character does not appear. Feel free to remove if you want a Kero.
	--
	if _timesince < 0 //If the user has changed their clock backwards
	{
		"\0\s[0]%(boottalks[0])\e"
	}
	elseif "%(month)/%(day)" == birthday[1] //If you want to write dates as DD/MM, feel free to swap this around. Also, feel free to add any other holidays you like here. Some ideas would be April Fools, Christmas, Halloween, your character's birthday, etc.
	{
		"\0\s[0]%(boottalks[1])\e"
	}
	/*elseif _timesince >= 90 //At least 3 months have passed. Feel free to nix this whole section if you don't want it.
	{
		TimeBoot
	}*/
	else
	{
		NormalBoot
	}
}

TimeBoot //This will be called if it's been at least 3 months since you opened the ghost last.
{
	_timesince = FUNCTIONEX("time_check.dll","how_many_days",lastclosed[0],lastclosed[1],lastclosed[2],0,0,0)
	_timesince *= -1
	
	//Add as many stages to this as you like. Just write the number of days you want. If you want this to happen earlier than 3 months, you can edit it in OnBoot.
	if _timesince >= 365 //A year
	{
		"\0\s[0]It's been a year since you opened me last!\e"
	}
	else
	{
		"\0\s[0]It's been at least 3 months since you opened me last!\e"
	}
}

NormalBoot
{
	"\0\s[0]Прывітанне %(username)!\e"
}

OnClose
{
	lastclosed = ("%(year)","%(month)","%(day)","%(hour)","%(minute)","%(second)") //This tracks the last time the ghost was closed.
	if holdingObsidian == 1 {
		holdingObsidian = 0
		"\0\s[0]Ну вось твая кошка, я не буду ёю украсць..."
	}
	elseif runtime[1] >= 5 || runtime[0] > 0 //If the ghost has been open longer than 5 minutes.
	{
		"\0\s[0]%(boottalks[2])"
	}
	else //If the ghost has been open less than 5 minutes.
	{
		"\0\s[0]%(boottalks[2])"
	}
	--
	"\w8\w8\-\e"
}

OnWindowStateRestore //When you bring the ghost back up after minimizing it.
{
	"\1\s[10]\0\s[0]%(boottalks[3])\e"
}

OnGhostChanging //Changing to another ghost.
{
	if reference0 == sakuraname //If reloading.
	{
		"\0\s[0]%(boottalks[4])"
		--
		"\w8\w8\e" //Gives the user a moment to read the dialogue before they disappear
	}
	else
	{
		lastclosed = ("%(year)","%(month)","%(day)","%(hour)","%(minute)","%(second)") //Same as above, tracks when they were last closed.
		if holdingObsidian == 1 {
			holdingObsidian = 0
			"\0\s[0]Ну вось твая кошка, я не буду ёю украсць..."
		}
		else {
		"\0\s[0]%(boottalks[5])"
		}
		--
		"\w8\w8\e"
	}
}

OnGhostChanged //After switching.
{
	"\1\s[10]\0\s[0]"
	--
	if reference0 == sakuraname //Finished reloading.
	{
		"%(boottalks[6])\e"
	}
	else
	{
		BootVars
		_timesince = FUNCTIONEX("time_check.dll","how_many_days",lastclosed[0],lastclosed[1],lastclosed[2],0,0,0)
		_timesince *= -1
		
		if _timesince >= 90 //If it's been 3 months or more since you opened them, it'll do the 'wow it's been a long time' dialogue instead of switching dialogue. You can change this if you like!
		{
			TimeBoot
		}
		else
		{
			"%(boottalks[7])\e"
		}
	}
}

OnOtherGhostChanged {
	if holdingObsidian == 1 {
		if reference0 == "Dusty" {
			holdingObsidian = 0
			"\0Эй, пачакайце! Твая кошка яшче тут!\s[-1]\![bind,obsidian,-,0]\w8\w8\w8\w8\s[0] Эх... гэта лёгка магчыма быць хуже. Я не вор котіков!\e"
		}
	}
}

OnOtherGhostClosed {
	if holdingObsidian == 1 {
		if reference0 == "Dusty" {
			holdingObsidian = 0
			"\0Эй, пачакайце! Твая кошка яшче тут!\s[-1]\![bind,obsidian,-,0]\w8\w8\w8\w8\s[0] Эх... гэта лёгка магчыма быць хуже. Я не вор котіков!\e"
		}
	}
}

OnWindowStateMinimize
{
    if holdingObsidian == 1
    {
        res_reference0 = "Dusty"
        holdingObsidian = 0
        "\0\s[-1]\![bind,obsidian,-,0]\e TadoraObsiMinimize"
    }
}

OnGetCoords //This gets the x and y coordinates when changing shells
{
	shellchange[0] = reference0[0]
	shellchange[1] = reference0[1]
}

//These are all the variables you want to set during a normal boot. So every time the ghost opens, we reset the timekeeping, whether the ghost has checked for updates, and if they've said anything yet.
BootVars
{
	lastTalk = ""
	runtime[0] = 0
	runtime[1] = 0
	runtime[2] = 0
	AutoUpdates[1] = 0
	booting = 0
	waitingcommuS = IARRAY
	waitingcommuM = IARRAY
	if currentlang == "english@belarusian"; OnTreeLoop
	OnGetLangs
	if stickybuter == 1; stickybuter = 0
	
}

//These are new variables to initialize after an update. By checking if the variable doesn't exist before initializing it, we prevent variables already in use from being overwritten. This is VERY IMPORTANT, or you risk resetting the user's progress on your new variables every time they update.
//ISVAR is a built in YAYA function that checks if a variable exists(is initialized) or not. It returns 0 if the variable doesn't exist, and 1 if it does.
UpdateVars
{
	//if ISVAR("examplevariable") == 0; examplevariable = 0
	if diclang == IARRAY; diclang = ("English@Belarusian|cat@кот|")
	if MiscFlags == IARRAY; MiscFlags = IARRAY
}

//These are all the variables that need to be initialized when the user first installs the ghost.
FirstBootVars
{
	lastTalk = ""
	runtime[0] = 0		//Hours, replaces passhour
	runtime[1] = 0		//Minutes, replaces passmin
	runtime[2] = 0		//Seconds, replaces passsec
	totalhours = 0		//Total number of hours the ghost has been run
	nowshell = "Default Shell" //Make sure to change this if you change your shell name
	username = "User"
	birthday[0] = "???"	//The user's birthday, written out with words
	birthday[1] = "???"	//The user's birthday, written in DD/MM format
	talkrate = "every 5 minutes"
	aitalkinterval = 300
	totalpunches = 0
	nowscale = 100		//Current scale, as a percentage
	//---Petting related variables---
	stroke[0] = 0		//The stroke value, which resets after each pet
	stroke[1] = 0		//The stroke value, but it doesn't reset after each pet
	stroke[2] = 0		//The current streak of successful pets
	pethighscore[0] = 0	//The petting high score, as the number of the stroke value
	pethighscore[1] = 0	//The petting high score, as the number of pets
	totalpets = 0		//The total times the ghost has been pet
	offscreen = IARRAY
	//---
	deleteshitai = "Off"
	betaTester = "Off"
	AutoUpdates = ("On",0)
	//nowmode = "Default" //Uncomment if you plan to add more modes
	installdate = ("%(year)","%(month)","%(day)","%(hour)","%(minute)","%(second)","%(ghostver)") //This tracks the exact day and time the ghost was installed, in case you want to mess around with that later. It also tracks what version the user installed, which may be helpful for debugging!
	booting = 1 //This will be set to 0 after firstboot is complete
	waitingcommuS = IARRAY //These two arrays handle the non-interrupt system for communication. They're for storing messages from other ghosts when your ghost is busy talking.
	waitingcommuM = IARRAY
	//move to firstboot when done testing
	lessonname = IARRAY
	skillnum = IARRAY
	numprog = IARRAY
	inbuiltlessonname = IARRAY
	inbuiltskillnum = IARRAY
	inbuiltnumprog = IARRAY
	currentlang = "English@Belarusian"
	currentsort = IARRAY
	treelang = IARRAY; treelang ,= "English@Belarusian"
	diclang = ("English@Belarusian|cat@кот|")
	MiscFlags = IARRAY
	--
	OnTreeLoop
	--
	OnDefPeraklad
}

OnDefPeraklad {
	peraklad = "English"
	boottalks = IARRAY
	commutalks = IARRAY
	dictalks = IARRAY
	etctalks = IARRAY
	gametalks = IARRAY
	lessontalks = IARRAY
	lestechtalks = IARRAY
	menutalks = IARRAY
	mousetalks = IARRAY
	nameteachtalks = IARRAY

	boottalks = ("Oh! I've never been a time traveler before! Hello there from the past %(username)!","Z dzniom naradzennia %(username)! I hope you've had a good day so far!","Pakul! I hope you'll come back soon, then!","Huh, kinda cramped down there, don't you think?","I'll reload then, yeah!","Make sure to tell %(reference0) what you learned today!","Hello again!","Oh, bye %(reference0)! I hope we can meet someday!")

	commutalks = ("* (Obsidian disappears into the taskbar with Dusty.)")

	dictalks = ("show me your langyages","Add language","Add word","Remove Language","Back to menu","Sort by: %(sort) first","Search for...","Main Menu","Dictionary List","Bye","No entry exists for %(reference0). Would you like to add one?","Yes","No","Search:","Result:","Sure! Which language would you like to add a dictionary for?","Please input your word -- it has to be formatted as 'native language@learning language', otherwise displaying it might get all weird!\nAlso, remember that you can't yet delete a word you've added. So make sure everything's spelled correctly!","Alrighty! First you gotta select a language...","Alright, which one do you want to remove?","Ok, I need you to select a language first.","Main menu","Go back","Cancel")

	etctalks = ("Installing something!","I've installed %(reference1)!\w6 Do you want to bring them here?","Call %(reference1)","Change to %(reference1)","No thanks","I've installed %(reference1)!","Oh,\w4 did you change your mind?","Sorry,\w4 the install failed.\nI got this error: '%(reference0)'.","I can't install this %(reference1).\w8\w8 Seems like it's meant for %(reference0) instead.","Finished making a .nar for your %(reference2)!\w8 You can see it \_a[OnNarLocation,%(reference1)]here.","Oh,\w4 do you want to uninstall?","Alright,\w4 take care %(username)!","Alright,\w4 I'll stick around for a while longer.","Ok,\w4 I'll update!","New files: %(reference0)","There are no new files.","Update complete!\w8\w8 Do you want to see the changelog?","Yes","No","Ok,\w4 you can see it in the functions menu later if you want!","Downloading %(reference0)...","%(_Update_Progress) of %(_Update_Total)","The MD5 values don't match on file %(_remaining) - '%(_currentfile)'.","Sorry,\w4 I got an error:\w4 '%(reference0)'.")

	gametalks = ("Language: %(displang)","hangman","word search","word scramble","bye lmao","Aw, you didn't get it! It was %(HMword), which means %(HMtrans)... I hope you get it next time!","Guessed so far: %(HMlet[1])\n\nTries left:","Guess the whole word","Open the input box again","Give up","Woah no way!! It's %(HMword), you're right, nya!\nOh, and it means %(HMtrans) if you're interested.","Hm... that's more than one. Try again with only one?","Oh, but that letter's already there! Maybe try again with something that isn't %(reference0), nya?","So you've got %(_word)...\n\nAnd you've guessed %(HMlet[1]).\n\nThink you figured it out by now?","Open the input box again","Give up","Yeah, you're right, you're amazing!!! %(HMword)! You even had %(_left) letters left empty!\n\n[half]\w4Oh, right, it's also %(HMtrans) if you didn't know. But maybe you did..?","Oh... no, it was %(HMword) -- %(HMtrans). I hope you get it next time, though!","Oh, okej. It was %(HMword), which means %(HMtrans), if you wanted to know. Come play again sometime?","Another!","Different Game","I'm done","Give up","%(_argv[1]) isn't right, nya. There's only so many words, after all!","Oh, moves have to be straight lines;\w4 up,\w4 down,\w4 left,\w4 right,\w4 or diagonal.","Hey cool, you found %(_argv[1])! It also means %(WordSearchTrans[_num]), nya!","Hey, that's right, AND the last word! %(_argv[1]), and it means... %(WordSearchTrans[_num])! You're so amazing, %(username)!","Play again","Play something else","I'm done","Unscramble the word:","Give up","Hey, you got it, nya! %(JumbleWord) means %(JumbleTrans)!","Oh, not really... %(reference0), right?\w4 It was actually %(JumbleWord) - or %(JumbleTrans), if you didn't know that already.","Another word","Different game","I'm done","Oh, ok... It was %(JumbleWord), which means %(JumbleTrans). But maybe you already knew that?","Another word","Different game","I'm done")

	lessontalks = ("(Click to proceed)","yay you reached the end!","To lessons","Main menu","Close menu","Translate the sentence: %(display)","Switch input method","Uh... maybe you should try again...?","That's the answer, yup! Good for you!","The correct answer is:\n%(displayanswer)","aw, better try again, huh?","Find the word:","Ding ding ding! A winner is you, ня!","(she makes a sound like a loud buzzer.) %(reference0)? Really? There's no way that's it! Try again!","Well, that's not supposed to happen... here, let's just go to the next one, ok?","Find the matches!","Great job, ня!","Hmm, I don't think so... Try again, ня")

	lestechtalks = ("Select which language pair you're working with:","Add Language","Select the course you're working on:","Add Course","Almost done! Pick a lesson here and then decide what you're gonna do with it:","Add Lesson","Edit","Delete","look man idk what's going on here","Main Menu","Please enter the names of the languages you're adding, wherein the first language is the language the person already knows:\n\nExample: english@belarusian","Please enter the name of your course:","Please enter the name of your lesson:","You are about to delete [ %(_display) ].","This action cannot be undone. Are you sure you want to proceed?","Yes","No (back to menu)","Choose which language you'd like to study:\n(Currently: %(displang))","Back","Main Menu","Choose which language pair and course you're working with from the following pop-up.","%(_disarray[1]) from %(_disarray[0])","Hello, which lesson would you like to see?","ERROR HAS OCCURED. CLICK TO RESTART","USER COURSES","That's all we have for now...","Change Language","Main Menu","Select a lesson to start:","Back","Main menu","Close menu","In the following window, please select the language pair (i.e; english@belarusian) and then which course you'd like to export.","Hey, you haven't cleared it out yet! Sorry, but you need to go and delete anything in there. That's the one thing I can't do myself!","Zip file generated!","Open Folder (selections not saved)","Main Menu","Opened!")

	menutalks = ("An update is available!\w8\w8 Do you want to download it?","Download it now","Maybe later","Turn off auto updates","Hi there!","Hello!","Alright,\w4 I'll remind you once a day!","Auto Update checks turned off,\w4 you can turn them on again in the Config menu!","Repeat last dialogue","Talk to another ghost","Lesson","Dictionary","Games","Custom lessons?","Lesson Configuration","Documentation","Export Course","User Config","Functions","Open Changelog","Nevermind","Runtime:","Version","Basically if you drag and drop a proper .zip or .nar file on me, I'll set up a new course for you!\nIf you'd like to make one yourself, you can head over to the %*\__q[OnConfigMenu]User Config menu\__q and click on the lesson creator option to turn it on. Then, once you head back to the main menu, you should have an option labeled 'Lesson Configuration'! Once you're in there, the menu's pretty straightforwards.\n\n[half]Anyways, if you're looking for documentation for how the lessons and stuff work, you can find it \_a[https://smokycinnamon.github.io/indifferentsorrel/tadora.html#Docs]here\_a, under the documentation tab. Hopefully that's all you need!","Back to menu","Ok bye","Documentation can be found under the aptly labeled documentation tab, \_a[https://smokycinnamon.github.io/indifferentsorrel/tadora.html#Docs]right here\_a","Back to menu","Ok bye","Sure, what do you want me to do?","Show System Information","Report a bug","Check for updates","Back to main menu","OS:","Memory Load:","Physical Memory:","CPU:","Uptime:","Ukagaka:","Back to functions","Done","Bugs can be reported to Smoky on \_a[https://www.smokycinnamonroll.tumblr.com]tumblr\_a.","Back to functions","I'm done","Settings","Language:","Your name:","Your birthday:","Your hemisphere:","Lesson Creator:","Comment on apps:","Auto Update checks:","Uninstall:","Back to the menu","On","Off","Northern","Southern","Are you still there?","mrraow","mao","mrrp?","Un-sticky","Bye Buterbrod")

	mousetalks = ("%(stroke[2]) pet streak!","Aww, thanks, haha!","Face in belarusian is твар!","* (%(stroke[2]) pet streak!)","* (Buterbrod purrs.)","(New high score! %(pethighscore[0])!)","I've been pat!")

	nameteachtalks = ("Ah! How are you called again?","Ok, same as before!","Name buddies! That's really cool!","Just User for now.","%(username), got it! Such a nice name, too!","Back to config","I'm done","Ok! I'm really excited that we can get to know each other!")
}
